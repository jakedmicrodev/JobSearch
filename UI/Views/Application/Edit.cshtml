@model Business.Entities.Application

@{
    ViewBag.Title = "Application";
    Layout = "~/Views/Shared/_LayoutNarrow.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Application</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.SubmitDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SubmitDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.SubmitDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CompanyId, Model.Companies, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PositionId, Model.Positions, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PositionType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.PositionTypeId, Model.PositionTypes, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PositionTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PositionNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PositionNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PositionNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PayRate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PayRate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PayRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Requirements, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Requirements, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Requirements, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.LocationId, Model.Locations, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Requester, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RequesterId, Model.Requesters, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RequesterId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApplicationType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ApplicationTypeId, Model.ApplicationTypes, "Select", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ApplicationTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ContactId, Model.Contacts, "Select", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Response, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ResponseTypeId, Model.Responses, "Select", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Result, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ResultId, Model.Results, "Select", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    <div class="form-group">
        <div style="margin-bottom: 50px; border-bottom: 1px solid transparent">
            <div class="col-md-2">
                @Html.ActionLink("Back to Search", "Search", "Application", new { @class = "btn btn-default" })
            </div>
            <div class="col-md-2">
                @Html.ActionLink("Add Interview", "CreateInterview", "Application", new { Id = Model.Id }, new { @class = "btn btn-default" })
            </div>
            <div class="col-md-1">
                @Html.ActionLink("Add Response", "CreateResponse", "Application", new { Id = Model.Id }, new { @class = "btn btn-default" })
            </div>
            <div class="col-md-7"></div>
        </div>
    </div>

    <div>
        @Html.Action("Interviews", new { ApplicationId = Model.Id });
    </div>

    <div>
        @Html.Action("Responses", new { ApplicationId = Model.Id });
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
